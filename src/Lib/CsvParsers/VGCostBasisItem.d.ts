export default class VGCostBasisItem {
    constructor(accountIn: any, symbolIn: any, descriptionIn: any, acquiredDateIn: any, costBasisMethodIn: any, quantityIn: any, costPerSharein: any, totalCostIn: any, marketValueIn: any, shortTermGainLossIn: any, longTermGainLossIn: any, totalGainLossIn: any, coveredNonCoveredIn: any, percentGainLossIn: any);
    account: any;
    symbol: any;
    description: any;
    aquiredDate: any;
    costBasisMethod: any;
    quantity: any;
    costPerShare: any;
    totalCost: any;
    marketValue: any;
    shortTermGainLoss: any;
    longTermGainLoss: any;
    totalGainLoss: any;
    coveredNonCovered: any;
    percentGainLoss: any;
    setAccount(accountIn: any): void;
    getAccount(): any;
    setSymbol(symbolIn: any): void;
    getSymbol(): any;
    setDescription(descriptionIn: any): void;
    getDescription(): any;
    setAcquiredDate(acquiredDateIn: any): void;
    acquiredDate: any;
    getAcquiredDate(): any;
    setCostBasisMethod(costBasisMethodIn: any): void;
    getCostBasisMethod(): any;
    setQuantity(quantityIn: any): void;
    getQuantity(): any;
    setCostPerShare(costPerShareIn: any): void;
    getCostPerShare(): any;
    setTotalCost(totalCostIn: any): void;
    getTotalCost(): any;
    setMarketValue(marketValueIn: any): void;
    getMarketValue(): any;
    setShortTermGainLoss(shortTermGainLossIn: any): void;
    getShortTermGainLoss(): any;
    setLongTermGainLoss(longTermGainLossIn: any): void;
    getLongTermGainLoss(): any;
    setTotalGainLoss(totalGainLossIn: any): void;
    getTotalGainLoss(): any;
    setCoveredNonCovered(coveredNonCoveredIn: any): void;
    getCoveredNonCovered(): any;
    setPercentGainLoss(percentGainLossIn: any): void;
    getPercentGainLoss(): any;
    toString(): string;
}
